[33mcommit 9e8628f4249fe6500a2ecafeaa1b250ecc81afb6[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmaster[m[33m, [m[1;31morigin/master[m[33m)[m
Author: Rachid0903 <gharbi.rachid097@gmail.com>
Date:   Sun May 25 15:33:10 2025 +0100

    Sauvegarde avant modifications - [25-05-2025]

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex a547bf3..db09e1e 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1,3 +1,4 @@[m
[32m+[m
 # Logs[m
 logs[m
 *.log[m
[1mdiff --git a/public/favicon.ico b/public/favicon.ico[m
[1mindex 32e0122..2fa717a 100644[m
Binary files a/public/favicon.ico and b/public/favicon.ico differ
[1mdiff --git a/src/App.tsx b/src/App.tsx[m
[1mindex 9c825c2..4651938 100644[m
[1m--- a/src/App.tsx[m
[1m+++ b/src/App.tsx[m
[36m@@ -9,18 +9,25 @@[m [mimport Register from "./pages/Register";[m
 import MapView from "./pages/MapView";[m
 import Comparison from "./pages/Comparison";[m
 import Diagnostics from "./pages/Diagnostics";[m
[31m-import Statistics from "./pages/Statistics"; // Si vous utilisez une page Statistics au lieu de WeeklyStatsView[m
[32m+[m[32mimport Statistics from "./pages/Statistics";[m
[32m+[m[32mimport Reports from "./pages/Reports";[m
 import WeeklyStatsView from "./components/WeeklyStatsView";[m
 import Navigation from "./components/Navigation";[m
 import { AuthProvider } from "./contexts/AuthContext";[m
 import { ThemeProvider } from "./contexts/ThemeContext";[m
 import ProtectedRoute from "./components/ProtectedRoute";[m
[31m-import React from "react";[m
[32m+[m[32mimport React, { useEffect } from "react";[m
[32m+[m[32mimport { updateAllSensorsTimestamps } from "./services/sensorService";[m
 [m
 // Create a QueryClient instance[m
 const queryClient = new QueryClient();[m
 [m
 const App = () => {[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    // Mettre √† jour les timestamps de tous les capteurs au d√©marrage de l'application[m
[32m+[m[32m    updateAllSensorsTimestamps();[m
[32m+[m[32m  }, []);[m
[32m+[m
   return ([m
     <QueryClientProvider client={queryClient}>[m
       <ThemeProvider>[m
[36m@@ -70,6 +77,14 @@[m [mconst App = () => {[m
                   </ProtectedRoute>[m
                 } [m
               />[m
[32m+[m[32m              <Route[m[41m [m
[32m+[m[32m                path="/reports"[m[41m [m
[32m+[m[32m                element={[m
[32m+[m[32m                  <ProtectedRoute>[m
[32m+[m[32m                    <Reports />[m
[32m+[m[32m                  </ProtectedRoute>[m
[32m+[m[32m                }[m[41m [m
[32m+[m[32m              />[m
               <Route path="*" element={<Navigate to="/" />} />[m
             </Routes>[m
             <Toaster />[m
[1mdiff --git a/src/components/DateTimeDisplay.tsx b/src/components/DateTimeDisplay.tsx[m
[1mindex 34e0bf9..522bd82 100644[m
[1m--- a/src/components/DateTimeDisplay.tsx[m
[1m+++ b/src/components/DateTimeDisplay.tsx[m
[36m@@ -1,37 +1,26 @@[m
 import React, { useState, useEffect } from "react";[m
[31m-import { Calendar, Clock } from "lucide-react";[m
[31m-import { formatDate, formatTime } from "@/lib/dateUtils";[m
[32m+[m[32mimport { formatDateTime } from "@/lib/dateUtils";[m
 [m
 const DateTimeDisplay: React.FC = () => {[m
   const [currentDateTime, setCurrentDateTime] = useState(new Date());[m
 [m
   useEffect(() => {[m
[31m-    const timer = setInterval(() => {[m
[32m+[m[32m    // Mettre √† jour l'heure toutes les secondes[m
[32m+[m[32m    const interval = setInterval(() => {[m
       setCurrentDateTime(new Date());[m
     }, 1000);[m
 [m
[31m-    return () => {[m
[31m-      clearInterval(timer);[m
[31m-    };[m
[32m+[m[32m    // Nettoyer l'intervalle lors du d√©montage du composant[m
[32m+[m[32m    return () => clearInterval(interval);[m
   }, []);[m
 [m
   return ([m
[31m-    <div className="flex flex-col sm:flex-row items-center gap-2 text-gray-600 bg-gray-100 p-2 rounded-md">[m
[31m-      <div className="flex items-center">[m
[31m-        <Calendar className="h-4 w-4 mr-1" />[m
[31m-        <span className="text-sm font-medium">[m
[31m-          {formatDate(currentDateTime)}[m
[31m-        </span>[m
[31m-      </div>[m
[31m-      <div className="flex items-center">[m
[31m-        <Clock className="h-4 w-4 mr-1" />[m
[31m-        <span className="text-sm font-medium">[m
[31m-          {formatTime(currentDateTime)}[m
[31m-        </span>[m
[31m-      </div>[m
[32m+[m[32m    <div className="text-sm text-muted-foreground">[m
[32m+[m[32m      {formatDateTime(currentDateTime)}[m
     </div>[m
   );[m
 };[m
 [m
 export default DateTimeDisplay;[m
 [m
[41m+[m
[1mdiff --git a/src/components/Navigation.tsx b/src/components/Navigation.tsx[m
[1mindex 1274375..ce61f33 100644[m
[1m--- a/src/components/Navigation.tsx[m
[1m+++ b/src/components/Navigation.tsx[m
[36m@@ -90,6 +90,17 @@[m [mconst Navigation: React.FC = () => {[m
                 <Activity className="h-4 w-4 mr-2" />[m
                 Diagnostics[m
               </Link>[m
[32m+[m[32m              <Link[m
[32m+[m[32m                to="/reports"[m
[32m+[m[32m                className={`inline-flex items-center px-1 pt-1 border-b-2 text-sm font-medium ${[m
[32m+[m[32m                  location.pathname === "/reports"[m
[32m+[m[32m                    ? "border-primary text-primary"[m
[32m+[m[32m                    : "border-transparent text-muted-foreground hover:text-foreground"[m
[32m+[m[32m                }`}[m
[32m+[m[32m              >[m
[32m+[m[32m                <FileText className="h-4 w-4 mr-2" />[m
[32m+[m[32m                Rapports[m
[32m+[m[32m              </Link>[m
             </div>[m
           </div>[m
           <div className="flex items-center">[m
[36m@@ -148,3 +159,4 @@[m [mexport default Navigation;[m
 [m
 [m
 [m
[41m+[m
[1mdiff --git a/src/components/SensorCard.tsx b/src/components/SensorCard.tsx[m
[1mindex 8800835..9eb94f9 100644[m
[1m--- a/src/components/SensorCard.tsx[m
[1m+++ b/src/components/SensorCard.tsx[m
[36m@@ -2,6 +2,7 @@[m
 import React from "react";[m
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";[m
 import { Thermometer, Droplet, Gauge, Rss, Clock } from "lucide-react";[m
[32m+[m[32mimport { formatDateTime } from "@/lib/dateUtils";[m
 [m
 export interface SensorData {[m
   id: string;[m
[36m@@ -19,14 +20,12 @@[m [minterface SensorCardProps {[m
 [m
 const SensorCard: React.FC<SensorCardProps> = ({ sensor }) => {[m
   const formatLastUpdated = (timestamp: number): string => {[m
[31m-    return new Intl.DateTimeFormat('fr-FR', {[m
[31m-      hour: '2-digit',[m
[31m-      minute: '2-digit',[m
[31m-      second: '2-digit',[m
[31m-      day: '2-digit',[m
[31m-      month: '2-digit',[m
[31m-      year: 'numeric',[m
[31m-    }).format(new Date(timestamp * 1000));[m
[32m+[m[32m    // V√©rifier si le timestamp est valide[m
[32m+[m[32m    if (!timestamp || timestamp < 1000000000) {[m
[32m+[m[32m      // Si le timestamp est invalide ou trop ancien, utiliser la date actuelle[m
[32m+[m[32m      return formatDateTime(new Date());[m
[32m+[m[32m    }[m
[32m+[m[32m    return formatDateTime(timestamp * 1000); // Convertir en millisecondes[m
   };[m
 [m
   const getStatusColor = (rssi: number): string => {[m
[1mdiff --git a/src/pages/Comparison.tsx b/src/pages/Comparison.tsx[m
[1mindex cc22a51..d1d214a 100644[m
[1m--- a/src/pages/Comparison.tsx[m
[1m+++ b/src/pages/Comparison.tsx[m
[36m@@ -1,22 +1,410 @@[m
[31m-import React from "react";[m
[32m+[m[32mimport React, { useState, useEffect } from "react";[m
 import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";[m
[32m+[m[32mimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";[m
[32m+[m[32mimport { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";[m
[32m+[m[32mimport { database } from "@/service